{
  "features": [
    {
      "name": "regex-ast-locator",
      "description": "Find AST nodes by text content instead of complex TSQuery patterns",
      "why": "Makes targeting for refactoring operations 10x simpler for AI agents",
      "score": 3,
      "status": "proposed",
      "tier": 1
    },
    {
      "name": "selection-tool",
      "description": "Select AST ranges between two points for range-based operations",
      "why": "Enables extract-method, comment-region, and other range operations",
      "score": 2,
      "status": "proposed",
      "tier": 1,
      "dependencies": [
        "regex-ast-locator"
      ]
    },
    {
      "name": "function-body-extractor",
      "description": "Get just the body of a function without reading entire files",
      "why": "Massive performance improvement for AI agents analyzing code",
      "score": 1,
      "status": "proposed",
      "tier": 1,
      "dependencies": [
        "regex-ast-locator"
      ]
    },
    {
      "name": "complete-ast-query-engine",
      "description": "Complete node-finding-command to replace expression-locator",
      "why": "Foundation for complex refactoring operations",
      "score": 2,
      "status": "in-progress",
      "tier": 1
    },
    {
      "name": "smart-method-extraction",
      "description": "Extract methods with automatic parameter/return detection",
      "why": "Most common refactoring operation needs automation",
      "score": 1,
      "status": "proposed",
      "tier": 2,
      "dependencies": [
        "selection-tool",
        "complete-ast-query-engine"
      ]
    },
    {
      "name": "automated-dead-code-elimination",
      "description": "Safe removal of unused code with impact analysis",
      "why": "Quality maintenance automation - removes manual analysis",
      "score": 0,
      "status": "proposed",
      "tier": 2,
      "dependencies": [
        "complete-ast-query-engine"
      ]
    },
    {
      "name": "optimize-abstraction-leakage-report",
      "description": "Identify highly connected clusters in change frequency graph instead of reporting all pairs",
      "why": "The abstraction leakage report can get huge due to the large amount of possible pairs. This could be improved by identifying highly connected clusters in the graph and reporting on them once.",
      "score": 1,
      "status": "proposed",
      "tier": 4
    }
  ],
  "lastUpdated": "2025-07-02T18:44:12.001Z"
}